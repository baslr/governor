// Generated by CoffeeScript 1.6.3
(function() {
  var badHostname, badHref, badHrefs, config, forbidden, hostnames;

  config = require('./config');

  hostnames = config.get('hostnames');

  forbidden = ['c.spiegel.de', 'prophet.heise.de'];

  badHrefs = ['http://www.computerbase.de/stats.php', 'http://m.heise.de/avw-bin'];

  module.exports = function(urlObj) {
    if (badHref(urlObj.hostname, urlObj.href)) {
      return false;
    }
    if (badHostname(urlObj.hostname)) {
      return false;
    }
    return true;
  };

  badHostname = function(hostname) {
    var i, n, _i, _j, _len, _len1;
    for (i = _i = 0, _len = forbidden.length; _i < _len; i = ++_i) {
      n = forbidden[i];
      if (n === hostname) {
        console.log("\x1b[31mHOSTNAME -> " + hostname + "\x1b[0m");
        return true;
      }
    }
    for (i = _j = 0, _len1 = hostnames.length; _j < _len1; i = ++_j) {
      n = hostnames[i];
      if (-1 < hostname.search("[*.]" + n + "$")) {
        console.log("\x1b[32mHOSTNAME -> " + hostname + "\x1b[0m");
        return false;
      }
      if (-1 < hostname.search("" + n + "$")) {
        console.log("\x1b[32mHOSTNAME -> " + hostname + "\x1b[0m");
        return false;
      }
    }
    console.log("\x1b[31mHOSTNAME -> " + hostname + "\x1b[0m");
    return true;
  };

  badHref = function(hostname, href) {
    var i, n, _i, _len;
    for (i = _i = 0, _len = badHrefs.length; _i < _len; i = ++_i) {
      n = badHrefs[i];
      if (-1 < href.search("^" + n)) {
        console.log("\x1b[31mHREF -> " + href + "\x1b[0m");
        return true;
      }
    }
    console.log("\x1b[32mHREF -> " + href + "\x1b[0m");
    return false;
  };

}).call(this);
